openapi: 3.0.0
info:
  title: Store products
  description: AWS Product Service
  version: "1.0"
servers:
- url: https://virtserver.swaggerhub.com/GoldenkovVitali/StoreAPI/1.0
  description: SwaggerHub API Auto Mocking
- url: https://r710wes8q3.execute-api.eu-west-1.amazonaws.com/dev
  description: SwaggerHub API
paths:
  /products/{Id}:
    get:
      summary: Returns a product by ID
      operationId: productsIdGET
      parameters:
      - name: Id
        in: path
        description: The ID of the product to return (id = 1-5)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "404":
          description: Product not found
      x-swagger-router-controller: Default
  /products:
    get:
      summary: Returns all products
      operationId: productsGET
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
      x-swagger-router-controller: Default
components:
  schemas:
    inline_response_200:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        price:
          type: integer
        img:
          type: string
      example:
        img: img
        price: 0
        description: description
        id: id
        title: title
    inline_response_200_1:
      type: object
      properties:
        productList:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              title:
                type: string
              description:
                type: string
              price:
                type: integer
              img:
                type: string
            example:
              img: img
              price: 0
              description: description
              id: id
              title: title
      example:
        productList:
        - img: img
          price: 0
          description: description
          id: id
          title: title
        - img: img
          price: 0
          description: description
          id: id
          title: title